{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","className","Spinner","message","defaultProps","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","this","React","Component","ReactDOM","render","document","querySelector"],"mappings":"sMAGMA,G,MAAe,CACnBC,OAAQ,CACNC,KAAM,uBACNC,SAAU,OAEZC,OAAQ,CACNF,KAAM,mBACNC,SAAU,eAyBCE,EAbO,SAAAC,GACpB,IATiBC,EAAKC,EAShBC,GATWF,EASQD,EAAMC,KATTC,GASc,IAAIE,MAAOC,YARnC,GAAKH,EAAQ,EAChBD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAID,EAEFP,EAAaS,GAAhCP,EAFqB,EAErBA,KAAMC,EAFe,EAEfA,SAEd,OACE,sBAAKS,UAAS,yBAAoBH,GAAlC,UACE,mBAAGG,UAAS,4BAAuBT,EAAvB,WACZ,6BAAKD,IACL,mBAAGU,UAAS,6BAAwBT,EAAxB,eC5BZU,EAAU,SAAAP,GACd,OACE,qBAAKM,UAAU,mBAAf,SACE,qBAAKA,UAAU,qBAAf,SAAqCN,EAAMQ,aAKjDD,EAAQE,aAAe,CACrBD,QAAS,cAGID,QCTTG,E,4MACJC,MAAQ,CAAEV,IAAK,KAAMW,aAAc,I,kEAEd,IAAD,OAClBC,OAAOC,UAAUC,YAAYC,oBAC3B,SAAAC,GAAQ,OAAI,EAAKC,SAAS,CAAEjB,IAAKgB,EAASE,OAAOC,cACjD,SAAAC,GAAG,OAAI,EAAKH,SAAS,CAAEN,aAAcS,EAAIb,e,+BAM3C,OAAIc,KAAKX,MAAMC,eAAiBU,KAAKX,MAAMV,IAClC,0CAAaqB,KAAKX,MAAMC,iBAG5BU,KAAKX,MAAMC,cAAgBU,KAAKX,MAAMV,IAClC,cAAC,EAAD,CAAeA,IAAKqB,KAAKX,MAAMV,MAGjC,cAAC,EAAD,CAASO,QAAQ,uC,GApBVe,IAAMC,WAwBxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.eb8b1302.chunk.js","sourcesContent":["import './SeasonDisplay.css';\r\nimport React from 'react';\r\n\r\nconst seasonConfig = {\r\n  summer: {\r\n    text: \"Let's hit the beach!\",\r\n    iconName: 'sun'\r\n  },\r\n  winter: {\r\n    text: 'Burr it is cold!',\r\n    iconName: 'snowflake'\r\n  }\r\n};\r\n\r\nconst getSeason = (lat, month) => {\r\n  if (month > 2 && month < 9) {\r\n    return lat > 0 ? 'summer' : 'winter';\r\n  } else {\r\n    return lat > 0 ? 'winter' : 'summer';\r\n  }\r\n};\r\n\r\nconst SeasonDisplay = props => {\r\n  const season = getSeason(props.lat, new Date().getMonth());\r\n  const { text, iconName } = seasonConfig[season];\r\n\r\n  return (\r\n    <div className={`season-display ${season}`}>\r\n      <i className={`icon-left massive ${iconName} icon`} />\r\n      <h1>{text}</h1>\r\n      <i className={`icon-right massive ${iconName} icon`} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SeasonDisplay;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import './SeasonsDisplay.css'\r\n// import React from 'react';\r\n\r\n// const seasonConfig = {\r\n//     summer: {\r\n//         text:\"let's hit the beach\",\r\n//         iconName:'sun'\r\n//     },\r\n//     winter:{\r\n//         text:\"Burr, it is cold. Let's get some coffee.\",\r\n//         iconName:'s nowflake'\r\n//     }\r\n// }\r\n\r\n// const getSeason = (lati, month) => {\r\n//   if (month > 2 && month < 9) {\r\n//     return lati > 0 ? 'summer' : 'winter';\r\n//   } else {\r\n//     return lati < 0 ? 'winter' : 'summer';\r\n//   }\r\n// };\r\n\r\n// const SeasonDisplay = props => {\r\n//   const season = getSeason(props.lat, new Date().getMonth());\r\n//     const icon = season === 'winter' ? 'snowflake':'sun';\r\n  \r\n//     //  console.log(season);\r\n//    const {text,iconName}= seasonConfig[season]  //text and icon name \r\n  \r\n//   return(\r\n      \r\n//       <div className={`season-display ${season}`}>\r\n//       <i className={`icon-left massive ${iconName} icon`}/>\r\n//       <h1>{text}</h1>\r\n//       <i className={`icon-right massive ${iconName} icon`}/>\r\n//       </div>\r\n//   )\r\n// };\r\n\r\n// export default SeasonDisplay;\r\n","import React from 'react';\r\n\r\nconst Spinner = props => {\r\n  return (\r\n    <div className=\"ui active dimmer\">\r\n      <div className=\"ui big text loader\">{props.message}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSpinner.defaultProps = {\r\n  message: 'Loading...'\r\n};\r\n\r\nexport default Spinner;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import Raect from 'react'\r\n\r\n// const spinner =(props) => {\r\n//     return(\r\n//         <div className=\"ui active dimmer\">\r\n//             <div className=\"ui big text loader\">\r\n//                 {props.message}\r\n//            </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// spinner.defaultProps={\r\n//     message:'Loading...'\r\n// }\r\n\r\n// export default spinner;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SeasonDisplay from './SeasonDisplay';\r\nimport Spinner from './Spinner';\r\n\r\nclass App extends React.Component {\r\n  state = { lat: null, errorMessage: '' };\r\n\r\n  componentDidMount() {\r\n    window.navigator.geolocation.getCurrentPosition(\r\n      position => this.setState({ lat: position.coords.latitude }),\r\n      err => this.setState({ errorMessage: err.message })\r\n    );\r\n  }\r\n\r\n  // React says we have to define render!!\r\n  render() {\r\n    if (this.state.errorMessage && !this.state.lat) {\r\n      return <div>Error: {this.state.errorMessage}</div>;\r\n    }\r\n\r\n    if (!this.state.errorMessage && this.state.lat) {\r\n      return <SeasonDisplay lat={this.state.lat} />;\r\n    }\r\n\r\n    return <Spinner message=\"Please accept location request\" />;\r\n  }\r\n}\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n\r\n    \r\n\r\n\r\n\r\n    //import React from 'react';\r\n    // import ReactDOM from 'react-dom';\r\n    // import SeasonDisplay from './SeasonsDisplay'\r\n    // import Spinner from './Spinner'\r\n    \r\n    // //functional base component\r\n    // //const App = ()=>{\r\n    //   //  window.navigator.geolocation.getCurrentPosition(\r\n    //    //     (position)=>console.log(position),\r\n    //   //      (err)=>console.log(err)\r\n    //   //      ); \r\n    //   //  return(\r\n    //  //   <div>Season!</div>\r\n    //   //  );\r\n    // //};\r\n    \r\n    // //class base component\r\n    // class App extends React.Component\r\n    // {   //react says we have to define render!!!\r\n    \r\n    //  //   constructor(props)\r\n    //   //  {  //gonna be called anytime instance of this class is created.\r\n    //   //      super(props); //making sure React.component constructor gets called.\r\n    //        //this is the only time we do direct assignment to state this.state!!\r\n    //   //      this.state={lat:null, errorMessage:''\r\n    //    // };\r\n    //         // setting states in this API\r\n    //  //} \r\n    //     //Above constructor does the same thing as this single line below.\r\n    //     state ={lati:null, errMessage:''};\r\n    \r\n    //     componentDidMount(){  //good for one time setup.\r\n    //         window.navigator.geolocation.getCurrentPosition(\r\n    //             position=>this.setState({lati:position.coords.latitude}),\r\n    //             err=>this.setState({errorMessage:err.message})\r\n    //             );\r\n    //            console.log(\"Rendred\");\r\n    //     }\r\n    //     render()\r\n    //     {\r\n    //          if (this.state.errorMessage && !this.state.lati) {\r\n    \r\n    //              return <div> Error:{this.state.errorMessage} </div>\r\n    //          }\r\n    \r\n    //          if (!this.state.errorMessage && this.state.lati) {\r\n    //              //we took state and pass it as a prop to SeasonsDisplay\r\n    //              // when state is updated that will update SeasonsDisplay\r\n    //              // as well. means in addition component will re-render \r\n    //              // any children like SeasonsDisplay.\r\n    //              return <div><SeasonDisplay lati={this.state.lati}/></div>      \r\n    //          }\r\n    //          return <Spinner message=\"Please, accept location request.\"/>;\r\n    //     }\r\n    \r\n    // };"],"sourceRoot":""}